# Enable 256 colors
set -g default-terminal "screen-256color"
set -g terminal-overrides 'xterm:colors=256'

# Start window numbering at 1
set -g base-index 1

# Auto adjust window number on window close
set -g renumber-windows on

# Set WM title
set -g set-titles on
set -g set-titles-string "tmux:#I [ #W ]"

setw -g automatic-rename on

# -- Status Bar -- #
# Bar colors
set -g status-bg "#303030" # monokai-bg+2
set -g status-fg "#F5F5F5" # monokai-fg

run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6- | sed 's/[^0-9.]//g')"

if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.9" | bc)" = 1 ]' \
    "set-window-option -g window-status-style fg=\"#518000\",bg=\"#303030\"; \
     set-window-option -g window-status-current-style fg=\"#87D700\",bg=\"#303030\""

if-shell -b '[ "$(echo "$TMUX_VERSION < 2.9" | bc)" = 1 ]' \
    "set-window-option -g window-status-fg \"#518000\" # monokai-fg-1; \
     set-window-option -g window-status-bg \"#303030\" # monokai-bg+2; \
     set-window-option -g window-status-current-fg \"#87D700\" # monokai-green; \
     set-window-option -g window-status-current-bg \"#303030\" # monokai-bg+2"

# Bar position
set -g status-position top

# Bar text
set -g status-right '#[fg=white][#(echo $USER)@#h][%h %d, %Y #[bold]%l:%M %p#[nobold]]'
set -g status-right-length 150

# Monitor window activity. Windows with activity are highlighted in the status line:
setw -g monitor-activity on

# Use the current directory when creating/splitting windows
bind-key '"' split-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
bind-key c new-window -c "#{pane_current_path}"

# Pane movement
bind-key j command-prompt -p "join pane from window #:"  "join-pane -h -s '%%'"
bind-key s command-prompt -p "send pane to window #:"  "join-pane -h -t '%%'"

# Smart pane switching with awareness of vim splits
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind-key -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind-key -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind-key -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
#bind-key -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l""')"

# Send prefix with C-a for nested sessions
bind-key -n C-a send-prefix

# Use vim keybindings in copy mode
set-window-option -g mode-keys vi
unbind-key p
bind-key p paste-buffer
bind-key -Tcopy-mode-vi v send -X begin-selection
bind-key -Tcopy-mode-vi y send -X copy-pipe "xclip -in -selection clipboard" # Requires xclip installed
unbind-key -Tcopy-mode MouseDragEnd1Pane

# Enable mouse support
set -g mouse on

# More history
set -g history-limit 100000
